'use strict';

module.exports = (function () {
  var cache = require('memory-cache');
  var utility = require('app/utility');


  return {
    put: cache.put,
    find: function (key, field) {
      var cached = cache.get(key) || {};
      return cached[field];
    },
    get: function (key, options) {
      var cached = cache.get(key);
      if (!utility.isEmptyObject(cached) && !utility.isEmptyObject(options)) {
        var filteredObject = {};
        if (utility.isArray(cached)) {
          (function () {
            for (var i = 0; i < cached.length; i++) {
              var row = cached[i];
              if (utility.objectToFilter(row, options)) {
                filteredObject[row._id] = row;
              }
            }
          })();
        } else if (utility.isObject(cached)) {
          (function () {
            for (var key in cached) {
              if (cached.hasOwnProperty(key)) {
                var row = cached[key];
                if (utility.objectToFilter(row, options)) {
                  filteredObject[row._id] = row;
                }
              }
            }
          })();
        }
        console.log(filteredObject);
        return filteredObject;
      }

      return cached;
    }
  };

})();